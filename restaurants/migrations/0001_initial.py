# Generated by Django 5.2.1 on 2025-07-23 17:50

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="RestaurantProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название вашего ресторана",
                        max_length=200,
                        verbose_name="Название ресторана",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Краткое описание ресторана",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        help_text="Полный адрес ресторана", verbose_name="Адрес"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Контактный телефон ресторана",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Номер телефона должен быть в формате: '+999999999'. До 15 цифр.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Контактный email ресторана",
                        max_length=254,
                        verbose_name="Email",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        help_text="Официальный сайт ресторана",
                        verbose_name="Сайт",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Логотип ресторана для отображения в меню",
                        null=True,
                        upload_to="restaurants/logos/",
                        verbose_name="Логотип",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("RUB", "₽ Рубль"),
                            ("USD", "$ Доллар"),
                            ("EUR", "€ Евро"),
                            ("KZT", "₸ Тенге"),
                        ],
                        default="RUB",
                        help_text="Валюта для отображения цен",
                        max_length=3,
                        verbose_name="Валюта",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Ставка налога в процентах (например, 10.00 для 10%)",
                        max_digits=5,
                        validators=[
                            django.core.validators.DecimalValidator(
                                decimal_places=2, max_digits=5
                            )
                        ],
                        verbose_name="Налог (%)",
                    ),
                ),
                (
                    "table_prefix",
                    models.CharField(
                        default="Стол",
                        help_text="Префикс для номеров столов (например: 'Стол', 'Table')",
                        max_length=10,
                        verbose_name="Префикс столов",
                    ),
                ),
                (
                    "service_charge",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Сервисный сбор в процентах",
                        max_digits=5,
                        validators=[
                            django.core.validators.DecimalValidator(
                                decimal_places=2, max_digits=5
                            )
                        ],
                        verbose_name="Сервисный сбор (%)",
                    ),
                ),
                (
                    "qr_data",
                    models.CharField(
                        help_text="Уникальный идентификатор для QR-кода",
                        max_length=100,
                        unique=True,
                        verbose_name="QR данные",
                    ),
                ),
                (
                    "qr_code",
                    models.ImageField(
                        blank=True,
                        help_text="Сгенерированный QR-код для меню",
                        null=True,
                        upload_to="restaurants/qr_codes/",
                        verbose_name="QR-код",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Доступен ли ресторан для заказов",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "working_hours",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Расписание работы ресторана в формате JSON",
                        verbose_name="Часы работы",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="SEO заголовок"
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(blank=True, verbose_name="SEO описание"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurantprofile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Профиль ресторана",
                "verbose_name_plural": "Профили ресторанов",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RestaurantSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "min_order_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Минимальная сумма заказа",
                    ),
                ),
                (
                    "max_order_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=999999.99,
                        max_digits=10,
                        verbose_name="Максимальная сумма заказа",
                    ),
                ),
                (
                    "order_timeout_minutes",
                    models.PositiveIntegerField(
                        default=30,
                        help_text="Время в минутах, после которого заказ автоматически отменяется",
                        verbose_name="Таймаут заказа (мин)",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(default=True, verbose_name="Email уведомления"),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(default=False, verbose_name="SMS уведомления"),
                ),
                (
                    "payment_gateway",
                    models.CharField(
                        blank=True,
                        help_text="Настройки платежной системы",
                        max_length=50,
                        verbose_name="Платежный шлюз",
                    ),
                ),
                (
                    "analytics_code",
                    models.TextField(
                        blank=True,
                        help_text="Google Analytics или другой код аналитики",
                        verbose_name="Код аналитики",
                    ),
                ),
                (
                    "restaurant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="settings",
                        to="restaurants.restaurantprofile",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Настройки ресторана",
                "verbose_name_plural": "Настройки ресторанов",
            },
        ),
    ]
