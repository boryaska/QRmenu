# Generated by Django 5.2.1 on 2025-07-23 18:48

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("menu", "0001_initial"),
        ("restaurants", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "order_number",
                    models.CharField(
                        help_text="Автоматически генерируемый номер заказа",
                        max_length=50,
                        unique=True,
                        verbose_name="Номер заказа",
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(
                        blank=True,
                        help_text="Имя клиента (необязательно)",
                        max_length=100,
                        verbose_name="Имя клиента",
                    ),
                ),
                (
                    "customer_phone",
                    models.CharField(
                        blank=True,
                        help_text="Контактный телефон клиента",
                        max_length=20,
                        verbose_name="Телефон клиента",
                    ),
                ),
                (
                    "customer_email",
                    models.EmailField(
                        blank=True,
                        help_text="Email клиента для уведомлений",
                        max_length=254,
                        verbose_name="Email клиента",
                    ),
                ),
                (
                    "table_number",
                    models.CharField(
                        blank=True,
                        help_text="Номер стола в ресторане",
                        max_length=20,
                        verbose_name="Номер стола",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает подтверждения"),
                            ("confirmed", "Подтвержден"),
                            ("preparing", "Готовится"),
                            ("ready", "Готов"),
                            ("completed", "Выполнен"),
                            ("cancelled", "Отменен"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Статус заказа",
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Сумма без налогов",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Сумма налога",
                    ),
                ),
                (
                    "service_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Сервисный сбор",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Общая сумма",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cash", "Наличными"),
                            ("card", "Картой"),
                            ("online", "Онлайн"),
                        ],
                        max_length=20,
                        verbose_name="Способ оплаты",
                    ),
                ),
                (
                    "is_paid",
                    models.BooleanField(
                        default=False,
                        help_text="Оплачен ли заказ",
                        verbose_name="Оплачен",
                    ),
                ),
                (
                    "paid_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время оплаты"
                    ),
                ),
                (
                    "special_requests",
                    models.TextField(
                        blank=True,
                        help_text="Комментарии клиента к заказу",
                        verbose_name="Особые пожелания",
                    ),
                ),
                (
                    "estimated_ready_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Ожидаемое время готовности"
                    ),
                ),
                (
                    "qr_data",
                    models.CharField(
                        help_text="QR данные ресторана, через которые был сделан заказ",
                        max_length=100,
                        verbose_name="QR данные",
                    ),
                ),
                (
                    "customer_ip",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP клиента"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="Информация о браузере клиента",
                        verbose_name="User Agent",
                    ),
                ),
                (
                    "confirmed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время подтверждения"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время выполнения"
                    ),
                ),
                (
                    "cancelled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время отмены"
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="restaurants.restaurantprofile",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Заказы",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Количество",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Цена блюда на момент заказа",
                        max_digits=10,
                        verbose_name="Цена за единицу",
                    ),
                ),
                (
                    "selected_options",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Опции, выбранные клиентом (JSON)",
                        verbose_name="Выбранные опции",
                    ),
                ),
                (
                    "special_requests",
                    models.TextField(
                        blank=True,
                        help_text="Комментарии клиента к конкретному блюду",
                        verbose_name="Особые пожелания",
                    ),
                ),
                (
                    "dish",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="menu.dish",
                        verbose_name="Блюдо",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="orders.order",
                        verbose_name="Заказ",
                    ),
                ),
            ],
            options={
                "verbose_name": "Позиция заказа",
                "verbose_name_plural": "Позиции заказов",
                "ordering": ["id"],
            },
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["restaurant", "status"], name="orders_orde_restaur_17016b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["order_number"], name="orders_orde_order_n_f3ada5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["created_at"], name="orders_orde_created_0e92de_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["status", "created_at"], name="orders_orde_status_25e057_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["is_paid"], name="orders_orde_is_paid_921844_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderitem",
            index=models.Index(fields=["order"], name="orders_orde_order_i_5d347b_idx"),
        ),
        migrations.AddIndex(
            model_name="orderitem",
            index=models.Index(fields=["dish"], name="orders_orde_dish_id_9e475c_idx"),
        ),
    ]
