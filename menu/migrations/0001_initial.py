# Generated by Django 5.2.1 on 2025-07-23 18:48

import django.core.validators
import django.db.models.deletion
import menu.models
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("restaurants", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Например: Салаты, Основные блюда",
                        max_length=100,
                        verbose_name="Название категории",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Краткое описание категории",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Изображение категории (необязательно)",
                        null=True,
                        upload_to=menu.models.category_image_upload_path,
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Порядок отображения категории в меню",
                        verbose_name="Порядок сортировки",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Отображается ли категория в меню",
                        verbose_name="Активна",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="restaurants.restaurantprofile",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Dish",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название блюда в меню",
                        max_length=200,
                        verbose_name="Название блюда",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Подробное описание блюда",
                        verbose_name="Описание",
                    ),
                ),
                (
                    "ingredients",
                    models.TextField(
                        blank=True,
                        help_text="Список ингредиентов через запятую",
                        verbose_name="Состав",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Цена блюда",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Цена",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Фото блюда",
                        null=True,
                        upload_to=menu.models.dish_image_upload_path,
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "calories",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Калорийность на 100г",
                        null=True,
                        verbose_name="Калории",
                    ),
                ),
                (
                    "proteins",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Количество белков на 100г",
                        max_digits=5,
                        null=True,
                        verbose_name="Белки (г)",
                    ),
                ),
                (
                    "fats",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Количество жиров на 100г",
                        max_digits=5,
                        null=True,
                        verbose_name="Жиры (г)",
                    ),
                ),
                (
                    "carbohydrates",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Количество углеводов на 100г",
                        max_digits=5,
                        null=True,
                        verbose_name="Углеводы (г)",
                    ),
                ),
                (
                    "weight",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Вес порции в граммах",
                        null=True,
                        verbose_name="Вес (г)",
                    ),
                ),
                (
                    "cooking_time",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Время приготовления в минутах",
                        null=True,
                        verbose_name="Время приготовления (мин)",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Порядок сортировки"
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True,
                        help_text="Доступно ли блюдо для заказа",
                        verbose_name="Доступно",
                    ),
                ),
                (
                    "is_popular",
                    models.BooleanField(
                        default=False,
                        help_text="Отмечать как популярное блюдо",
                        verbose_name="Популярное",
                    ),
                ),
                (
                    "is_new",
                    models.BooleanField(
                        default=False,
                        help_text="Отмечать как новое блюдо",
                        verbose_name="Новинка",
                    ),
                ),
                (
                    "is_spicy",
                    models.BooleanField(
                        default=False, help_text="Острое блюдо", verbose_name="Острое"
                    ),
                ),
                (
                    "is_vegetarian",
                    models.BooleanField(
                        default=False,
                        help_text="Подходит для вегетарианцев",
                        verbose_name="Вегетарианское",
                    ),
                ),
                (
                    "is_vegan",
                    models.BooleanField(
                        default=False,
                        help_text="Подходит для веганов",
                        verbose_name="Веганское",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dishes",
                        to="menu.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dishes",
                        to="restaurants.restaurantprofile",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Блюдо",
                "verbose_name_plural": "Блюда",
                "ordering": ["category__sort_order", "sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="DishIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Название ингредиента"
                    ),
                ),
                (
                    "quantity",
                    models.CharField(
                        blank=True,
                        help_text="Например: 200г, 2 шт, по вкусу",
                        max_length=50,
                        verbose_name="Количество",
                    ),
                ),
                (
                    "is_allergen",
                    models.BooleanField(
                        default=False,
                        help_text="Является ли ингредиент аллергеном",
                        verbose_name="Аллерген",
                    ),
                ),
                (
                    "can_exclude",
                    models.BooleanField(
                        default=True,
                        help_text="Можно ли исключить ингредиент из блюда",
                        verbose_name="Можно исключить",
                    ),
                ),
                (
                    "dish",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dish_ingredients",
                        to="menu.dish",
                        verbose_name="Блюдо",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ингредиент блюда",
                "verbose_name_plural": "Ингредиенты блюд",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DishOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Например: Большая порция, Сыр, Соус",
                        max_length=100,
                        verbose_name="Название опции",
                    ),
                ),
                (
                    "price_modifier",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Дополнительная стоимость (может быть отрицательной)",
                        max_digits=8,
                        verbose_name="Изменение цены",
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False,
                        help_text="Обязательна ли эта опция при заказе",
                        verbose_name="Обязательная",
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True,
                        help_text="Доступна ли опция для выбора",
                        verbose_name="Доступна",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Порядок сортировки"
                    ),
                ),
                (
                    "dish",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="options",
                        to="menu.dish",
                        verbose_name="Блюдо",
                    ),
                ),
            ],
            options={
                "verbose_name": "Опция блюда",
                "verbose_name_plural": "Опции блюд",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["restaurant", "is_active"],
                name="menu_catego_restaur_c97a7f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["sort_order"], name="menu_catego_sort_or_c6f489_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="category",
            unique_together={("restaurant", "name")},
        ),
        migrations.AddIndex(
            model_name="dish",
            index=models.Index(
                fields=["restaurant", "is_available"],
                name="menu_dish_restaur_7c5293_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="dish",
            index=models.Index(
                fields=["category", "is_available"], name="menu_dish_categor_c21d88_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dish",
            index=models.Index(
                fields=["is_popular"], name="menu_dish_is_popu_38272c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dish",
            index=models.Index(fields=["is_new"], name="menu_dish_is_new_381161_idx"),
        ),
        migrations.AddIndex(
            model_name="dish",
            index=models.Index(
                fields=["sort_order"], name="menu_dish_sort_or_af9573_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="dish",
            unique_together={("restaurant", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="dishingredient",
            unique_together={("dish", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="dishoption",
            unique_together={("dish", "name")},
        ),
    ]
